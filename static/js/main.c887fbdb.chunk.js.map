{"version":3,"sources":["components/AddTable/AddTable.jsx","components/ShowTable/ShowTable.jsx","App.js","index.js"],"names":["AddTable","table","createTable","addRow","useState","m","createM","n","createN","className","type","max","min","value","onChange","event","target","placeholder","onClick","length","ShowTable","average","amountClick","map","row","key","Math","random","show","id","amount","reduce","acc","current","App","handleTable","handleAverahe","useEffect","newAverage","i","a","push","toFixed","newTable","j","floor","procent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c887fbdb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './addTable.scss';\n\nexport const AddTable = ({ table, createTable, addRow }) => {\n  const [m, createM] = useState('');\n  const [n, createN] = useState('');\n\n  return (\n    <div\n      className=\"addTable\"\n    >\n      <div\n        className=\"addTable__block\"\n      >\n        <h1 className=\"addTable__headind\">Columns = </h1>\n        <input\n          className=\"addTable__input\"\n          type=\"number\"\n          max=\"10\"\n          min=\"1\"\n          value={m}\n          onChange={event => createM(event.target.value)}\n          placeholder=\"M\"\n        />\n      </div>\n\n      <div\n        className=\"addTable__block\"\n      >\n        <h1 className=\"addTable__headind\">Rows = </h1>\n        <input\n          className=\"addTable__input\"\n          type=\"number\"\n          max=\"10\"\n          min=\"1\"\n          value={n}\n          onChange={event => createN(event.target.value)}\n          placeholder=\"N\"\n        />\n      </div>\n\n      <button\n        type=\"button\"\n        className=\"addTable__button\"\n        onClick={() => createTable(m, n)}\n      >\n        Create\n      </button>\n\n      <button\n        type=\"button\"\n        className={table.length > 0\n          ? `addTable__button`\n          : `addTable__button--none`}\n        onClick={() => addRow(m)}\n      >\n        Add new row\n      </button>\n    </div>\n  );\n};\n\nAddTable.propTypes = {\n  table: PropTypes.arrayOf().isRequired,\n  createTable: PropTypes.func.isRequired,\n  addRow: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './showTable.scss';\n\nexport const ShowTable = ({ table, average, amountClick }) => (\n  <div\n    className=\"showTable\"\n  >\n    <ul\n      className=\"showTable__list\"\n    >\n      {table.map(row => (\n        <li\n          className=\"showTable__item\"\n          key={Math.random()}\n        >\n          <div\n            className=\"showTable__row\"\n          >\n            {row.map(show => (\n              <button\n                type=\"button\"\n                key={show.id}\n                value={show.id}\n                className=\"showTable__amount\"\n                onClick={event => amountClick(event)}\n              >\n                {show.amount}\n              </button>\n            ))}\n          </div>\n          <span\n            className=\"showTable__sum\"\n          >\n            {row.reduce((acc, current) => acc + current.amount, 0)}\n          </span>\n        </li>\n      ))}\n      <li\n        className=\"showTable__item showTable__average\"\n      >\n        {average.map(amount => (\n          <span\n            key={Math.random()}\n            className=\"showTable__amount showTable__average-item\"\n          >\n            {amount}\n          </span>\n        ))}\n      </li>\n    </ul>\n  </div>\n);\n\nShowTable.propTypes = {\n  amountClick: PropTypes.func.isRequired,\n  table: PropTypes.arrayOf().isRequired,\n  average: PropTypes.arrayOf().isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { AddTable } from './components/AddTable';\nimport { ShowTable } from './components/ShowTable';\n\nfunction App() {\n  const [table, handleTable] = useState([]);\n  const [average, handleAverahe] = useState([]);\n\n  const createTable = (m, n) => {\n    const newTable = [];\n    let id = 0;\n\n    for (let i = 0; i < n; i += 1) {\n      const row = [];\n\n      for (let j = 0; j < m; j += 1) {\n        let amount = Math.floor(Math.random() * 1000);\n\n        if (amount < 100) {\n          amount += 100;\n        }\n\n        row.push({\n          amount,\n          procent: 0,\n          id,\n        });\n\n        id += 1;\n      }\n\n      newTable.push(row);\n    }\n\n    handleTable(newTable);\n  };\n\n  const amountClick = (event) => {\n    const id = event.target.value;\n\n    const newTable = [...table];\n\n    for (let i = 0; i < newTable.length; i += 1) {\n      for (let j = 0; j < newTable[i].length; j += 1) {\n        if (+newTable[i][j].id === +id) {\n          newTable[i][j].amount += 1;\n        }\n      }\n    }\n\n    handleTable(newTable);\n  };\n\n  const addRow = (m) => {\n    const newTable = [...table];\n\n    const row = [];\n    let id = table[table.length - 1][m - 1].id + 1;\n\n    for (let j = 0; j < m; j += 1) {\n      let amount = Math.floor(Math.random() * 1000);\n\n      if (amount < 100) {\n        amount += 100;\n      }\n\n      row.push({\n        amount,\n        procent: 0,\n        id,\n      });\n\n      id += 1;\n    }\n\n    newTable.push(row);\n\n    handleTable(newTable);\n  };\n\n  useEffect(() => {\n    if (table.length > 0) {\n      const newAverage = [];\n\n      for (let i = 0; i < table[0].length; i += 1) {\n        const a = table.reduce((acc, current) => acc + current[i].amount, 0);\n\n        newAverage.push((a / table.length).toFixed(2));\n      }\n\n      handleAverahe(newAverage);\n    }\n  }, [table]);\n\n  return (\n    <>\n      <AddTable\n        createTable={createTable}\n        addRow={addRow}\n        table={table}\n      />\n\n      <ShowTable\n        table={table}\n        average={average}\n        amountClick={amountClick}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}