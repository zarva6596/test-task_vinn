{"version":3,"sources":["components/AddTable/AddTable.jsx","components/ShowTable/ShowTable.jsx","App.js","index.js"],"names":["AddTable","table","createTable","addRow","useState","m","createM","n","createN","className","type","max","min","value","onChange","event","target","placeholder","onClick","length","ShowTable","average","amountClick","removeRow","hoverAmount","endHoverAmount","showProcent","endShowProcent","map","row","i","key","Math","random","show","id","hover","onMouseEnter","onMouseLeave","procent","amount","style","height","reduce","acc","current","App","handleTable","handleAverahe","procentCalculation","newTab","newTable","sum","num","j","toFixed","useEffect","newAverage","a","push","floor","newArr","splice","arr","forEach","sort","b","index","indexOf","innerText","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3dc8cb6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './addTable.scss';\n\nexport const AddTable = ({ table, createTable, addRow }) => {\n  const [m, createM] = useState('');\n  const [n, createN] = useState('');\n\n  return (\n    <div\n      className=\"addTable\"\n    >\n      <div\n        className=\"addTable__block\"\n      >\n        <h1 className=\"addTable__heading\">Columns = </h1>\n        <input\n          className=\"addTable__input\"\n          type=\"number\"\n          max=\"10\"\n          min=\"1\"\n          value={m}\n          onChange={event => createM(event.target.value)}\n          placeholder=\"M\"\n        />\n\n        <h1 className=\"addTable__heading\">Rows = </h1>\n        <input\n          className=\"addTable__input\"\n          type=\"number\"\n          max=\"10\"\n          min=\"1\"\n          value={n}\n          onChange={event => createN(event.target.value)}\n          placeholder=\"N\"\n        />\n      </div>\n\n      <button\n        type=\"button\"\n        className=\"addTable__button\"\n        onClick={() => createTable(m, n)}\n      >\n        Create\n      </button>\n\n      <button\n        type=\"button\"\n        className={table.length > 0\n          ? `addTable__button`\n          : `addTable__button--none`}\n        onClick={() => addRow(m)}\n      >\n        Add new row\n      </button>\n    </div>\n  );\n};\n\nAddTable.propTypes = {\n  table: PropTypes.arrayOf(\n    PropTypes.arrayOf(PropTypes.object),\n  ).isRequired,\n  createTable: PropTypes.func.isRequired,\n  addRow: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './showTable.scss';\n\nexport const ShowTable = ({\n  table,\n  average,\n  amountClick,\n  removeRow,\n  hoverAmount,\n  endHoverAmount,\n  showProcent,\n  endShowProcent,\n}) => (\n  <div\n    className={table.length > 0\n      ? `showTable`\n      : `showTable--none`}\n  >\n    <ul\n      className=\"showTable__list\"\n    >\n      {table.map((row, i) => (\n        <li\n          className=\"showTable__item\"\n          key={Math.random()}\n        >\n          {row.map(show => (\n            <div\n              className=\"showTable__row\"\n              key={Math.random()}\n            >\n              <button\n                type=\"button\"\n                value={show.id}\n                className={!show.hover ? 'showTable__amount'\n                  : 'showTable__amount showTable__amount--near'}\n                onMouseEnter={event => hoverAmount(event)}\n                onMouseLeave={() => endHoverAmount()}\n                onClick={event => amountClick(event)}\n              >\n                {!show.showProcent ? show.amount : `${show.procent} %`}\n\n                <div\n                  style={{\n                    height: `${+show.procent}%`,\n                  }}\n                  className={!show.showProcent ? 'showTable__procent--none'\n                    : 'showTable__procent'}\n                >\n                  .\n                </div>\n              </button>\n            </div>\n          ))}\n          <span\n            className=\"showTable__sum\"\n            id={i}\n            onMouseEnter={event => showProcent(event)}\n            onMouseLeave={() => endShowProcent()}\n          >\n            {row.reduce((acc, current) => acc + current.amount, 0)}\n          </span>\n          <div>\n            <button\n              className=\"showTable__remove\"\n              type=\"button\"\n              value={i}\n              onClick={event => removeRow(event)}\n            >\n              X\n            </button>\n          </div>\n        </li>\n      ))}\n      <li\n        className=\"showTable__item showTable__average\"\n      >\n        {average.map(amount => (\n          <span\n            key={Math.random()}\n            className=\"showTable__amount showTable__average-item\"\n          >\n            {amount}\n          </span>\n        ))}\n      </li>\n    </ul>\n  </div>\n);\n\nShowTable.propTypes = {\n  amountClick: PropTypes.func.isRequired,\n  table: PropTypes.arrayOf(\n    PropTypes.arrayOf(PropTypes.object),\n  ).isRequired,\n  average: PropTypes.arrayOf(PropTypes.string).isRequired,\n  removeRow: PropTypes.func.isRequired,\n  hoverAmount: PropTypes.func.isRequired,\n  endHoverAmount: PropTypes.func.isRequired,\n  showProcent: PropTypes.func.isRequired,\n  endShowProcent: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { AddTable } from './components/AddTable';\nimport { ShowTable } from './components/ShowTable';\n\nfunction App() {\n  const [table, handleTable] = useState([]);\n  const [average, handleAverahe] = useState([]);\n\n  const createTable = (m, n) => {\n    const newTable = [];\n    let id = 0;\n\n    for (let i = 0; i < n; i += 1) {\n      const row = [];\n\n      for (let j = 0; j < m; j += 1) {\n        let amount = Math.floor(Math.random() * 1000);\n\n        if (amount < 100) {\n          amount += 100;\n        }\n\n        row.push({\n          amount,\n          procent: 0,\n          id,\n          hover: false,\n          showProcent: false,\n        });\n\n        id += 1;\n      }\n\n      newTable.push(row);\n    }\n\n    procentCalculation(newTable);\n  };\n\n  const amountClick = (event) => {\n    const id = event.target.value;\n\n    const newTable = [...table];\n\n    for (let i = 0; i < newTable.length; i += 1) {\n      for (let j = 0; j < newTable[i].length; j += 1) {\n        if (+newTable[i][j].id === +id) {\n          newTable[i][j].amount += 1;\n        }\n      }\n    }\n\n    procentCalculation(newTable);\n  };\n\n  const addRow = (m) => {\n    const newTable = [...table];\n\n    const row = [];\n    let id = table[table.length - 1][m - 1].id + 1;\n\n    for (let j = 0; j < m; j += 1) {\n      let amount = Math.floor(Math.random() * 1000);\n\n      if (amount < 100) {\n        amount += 100;\n      }\n\n      row.push({\n        ...table[0][0],\n        amount,\n        id,\n      });\n\n      id += 1;\n    }\n\n    newTable.push(row);\n\n    procentCalculation(newTable);\n  };\n\n  const removeRow = (event) => {\n    const newArr = [...table];\n\n    newArr.splice(event.target.value, 1);\n    handleTable(newArr);\n  };\n\n  const hoverAmount = (event) => {\n    const newTable = [...table];\n\n    const arr = [];\n\n    newTable.forEach(row => row.forEach(num => arr.push(+num.amount)));\n\n    arr.sort((a, b) => a - b);\n    const index = arr.indexOf(+event.target.innerText);\n\n    const a = arr[index + 1];\n    const b = arr[index - 1];\n\n    for (let i = 0; i < newTable.length; i += 1) {\n      for (let j = 0; j < newTable[i].length; j += 1) {\n        if (+newTable[i][j].amount === a\n          || +newTable[i][j].amount === b) {\n          newTable[i][j].hover = true;\n        }\n      }\n    }\n\n    handleTable(newTable);\n  };\n\n  const endHoverAmount = () => {\n    const newTable = [...table];\n\n    for (let i = 0; i < newTable.length; i += 1) {\n      for (let j = 0; j < newTable[i].length; j += 1) {\n        newTable[i][j].hover = false;\n      }\n    }\n\n    handleTable(newTable);\n  };\n\n  useEffect(() => {\n    if (table.length > 0) {\n      const newAverage = [];\n\n      for (let i = 0; i < table[0].length; i += 1) {\n        const a = table.reduce((acc, current) => acc + current[i].amount, 0);\n\n        newAverage.push((a / table.length).toFixed(1));\n      }\n\n      handleAverahe(newAverage);\n    }\n  }, [table]);\n\n  function procentCalculation(newTab) {\n    const newTable = [...newTab];\n\n    for (let i = 0; i < newTable.length; i += 1) {\n      const sum = newTab[i].reduce((acc, num) => acc + (+num.amount), 0);\n\n      for (let j = 0; j < newTable[i].length; j += 1) {\n        newTable[i][j].procent\n          = (+newTable[i][j].amount / sum * 100).toFixed(1);\n      }\n    }\n\n    handleTable(newTable);\n  }\n\n  const showProcent = (event) => {\n    const newTable = [...table];\n    const i = event.target.id;\n\n    for (let j = 0; j < newTable[i].length; j += 1) {\n      newTable[i][j].showProcent = true;\n    }\n\n    handleTable(newTable);\n  };\n\n  const endShowProcent = () => {\n    const newTable = [...table];\n\n    for (let i = 0; i < newTable.length; i += 1) {\n      for (let j = 0; j < newTable[i].length; j += 1) {\n        newTable[i][j].showProcent = false;\n      }\n    }\n\n    handleTable(newTable);\n  };\n\n  return (\n    <>\n      <AddTable\n        createTable={createTable}\n        addRow={addRow}\n        table={table}\n      />\n\n      <ShowTable\n        table={table}\n        average={average}\n        amountClick={amountClick}\n        removeRow={removeRow}\n        hoverAmount={hoverAmount}\n        endHoverAmount={endHoverAmount}\n        showProcent={showProcent}\n        endShowProcent={endShowProcent}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}